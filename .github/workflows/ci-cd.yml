name: Word Definition Extension CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Create package-lock.json if missing
      run: |
        if [ ! -f "package-lock.json" ] && [ -f "package.json" ]; then
          echo "No lock file found. Creating package-lock.json..."
          npm i --package-lock-only
        fi
    
    - name: Install dependencies
      run: npm ci
    
    - name: Verify ESLint config
      run: |
        echo "Checking ESLint configuration file format"
        if [ -f ".eslintrc.cjs" ] || [ -f ".eslintrc.js" ] || [ -f ".eslintrc.json" ]; then
          echo "Using legacy ESLint config format"
        elif [ -f "eslint.config.js" ]; then
          echo "Using flat ESLint config format"
        fi
    
    - name: Run ESLint
      # Setting environment variable to use legacy config format
      env:
        ESLINT_USE_FLAT_CONFIG: 'false'
      run: npx eslint .
    
    - name: Run tests
      run: npm test
      
  build-and-release:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run build
    
    - name: Package extension
      run: |
        mkdir -p ./dist
        cd ./build
        zip -r ../dist/word-definition-extension-${{ github.sha }}.zip .
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/word-definition-extension-${{ github.sha }}.zip
        asset_name: word-definition-extension.zip
        asset_content_type: application/zip